<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_snc_app_inv_app_details</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_snc_app_inv_app_details">expiredCHANGESTOtrue^EQ<item endquery="false" field="expired" goto="false" newquery="false" operator="CHANGESTO" or="false" value="true"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Make app inactive upon expiry</name>
        <order>150</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {
    var gr = new GlideRecord('x_snc_app_inv_app_details');
    //gr.addQuery('name', current.name);
    gr.addQuery('expired', true);
    gr.query();
gs.addInfoMessage('line6');
    while (gr.next()) {
        var name = gr.sys_id;
        var dependencyDetails = new GlideRecord('x_snc_app_inv_dependency_details');
        dependencyDetails.addQuery('app_name', name);
        dependencyDetails.query();
gs.addInfoMessage('line12');
        while (dependencyDetails.next()) {
			gs.addInfoMessage('line14');
            dependencyDetails.setValue('isactive', false);
            dependencyDetails.update();
        }
    }


})(current, previous);

// var dependencyApp = current.sys_id;
// gs.info('line3');
//     var dependencyDetails = new GlideRecord('x_snc_app_inv_dependency_details');
//     dependencyDetails.addQuery('app_name', dependencyApp);
//     dependencyDetails.query();
// 	var count = dependencyDetails.getRowCount();
// 	gs.info(count);
// gs.info('line7');
//     while (dependencyDetails.next()) {
//         var isExpired = current.getValue('expired');
// gs.info('line10');
//         if (isExpired == 'true') {
// 			gs.info('line11');
//             dependencyDetails.setValue('isactive', false);
//             dependencyDetails.update();

//         }
//     }]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-03-04 15:38:49</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>b8fc4f24ebbc06105387f734bad0cd4c</sys_id>
        <sys_mod_count>29</sys_mod_count>
        <sys_name>Make app inactive upon expiry</sys_name>
        <sys_overrides/>
        <sys_package display_value="Application Management System" source="x_snc_app_inv">e6c5a74deb94c6105387f734bad0cd21</sys_package>
        <sys_policy/>
        <sys_scope display_value="Application Management System">e6c5a74deb94c6105387f734bad0cd21</sys_scope>
        <sys_update_name>sys_script_b8fc4f24ebbc06105387f734bad0cd4c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-03-11 04:07:55</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=b8fc4f24ebbc06105387f734bad0cd4c"/>
</record_update>
